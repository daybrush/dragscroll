{"version":3,"file":"dragscroll.min.js","sources":["../src/DragScroll.ts"],"sourcesContent":["import EventEmitter from \"@scena/event-emitter\";\nimport { now } from \"@daybrush/utils\";\nimport { DragScrollEvents, DragScrollOptions, Rect } from \"./types\";\n\nfunction getDefaultScrollPosition(e: { container: HTMLElement, direction: number[] }) {\n    const container = e.container;\n\n    return [\n        container.scrollLeft,\n        container.scrollTop,\n    ];\n}\n\nexport default class DragScroll extends EventEmitter<DragScrollEvents> {\n    private startRect: Rect | null = null;\n    private startPos: number[] = [];\n    private prevTime: number = 0;\n    private timer: number = 0;\n    public dragStart(e: any, options: DragScrollOptions) {\n        const {\n            top,\n            left,\n            width,\n            height,\n        } = options.container.getBoundingClientRect();\n\n        this.startPos = [e.clientX, e.clientY];\n        this.startRect = { top, left, width, height };\n    }\n    public drag(e: any, options: DragScrollOptions) {\n        const {\n            clientX,\n            clientY,\n        } = e;\n        const {\n            container,\n            threshold = 0,\n            throttleTime = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = options;\n        const {\n            startRect,\n            startPos,\n        } = this;\n        const nowTime = now();\n        const distTime = Math.max(throttleTime + this.prevTime - nowTime, 0);\n\n        const direction = [0, 0];\n\n        if (startRect.top > clientY - threshold) {\n            if (startPos[1] > startRect.top || clientY < startPos[1]) {\n                direction[1] = -1;\n            }\n        } else if (startRect.top + startRect.height < clientY + threshold) {\n            if (startPos[1] < startRect.top + startRect.height || clientY > startPos[1]) {\n                direction[1] = 1;\n            }\n        }\n        if (startRect.left > clientX - threshold) {\n            if (startPos[0] > startRect.left || clientX < startPos[0]) {\n                direction[0] = -1;\n            }\n        } else if (startRect.left + startRect.width < clientX + threshold) {\n            if (startPos[0] < startRect.left + startRect.width || clientX > startPos[0]) {\n                direction[0] = 1;\n            }\n        }\n        clearTimeout(this.timer);\n\n        if (!direction[0] && !direction[1]) {\n            return false;\n        }\n        if (distTime > 0) {\n            this.timer = window.setTimeout(() => {\n                this.drag(e, options);\n            }, distTime);\n\n            return false;\n        }\n        this.prevTime = nowTime;\n        const prevPos = getScrollPosition({ container, direction });\n\n        this.trigger(\"scroll\", {\n            container,\n            direction,\n            inputEvent: e,\n        });\n\n        const nextPos = getScrollPosition({ container, direction });\n        const offsetX = nextPos[0] - prevPos[0];\n        const offsetY = nextPos[1] - prevPos[1];\n\n        if (!offsetX && !offsetY) {\n            return false;\n        }\n        this.trigger(\"move\", {\n            offsetX: direction[0] ? offsetX : 0,\n            offsetY: direction[1] ? offsetY : 0,\n            inputEvent: e,\n        });\n\n        if (throttleTime) {\n            this.timer = window.setTimeout(() => {\n                this.drag(e, options);\n            }, throttleTime);\n        }\n        return true;\n    }\n    public dragEnd() {\n        clearTimeout(this.timer);\n    }\n}\n"],"names":["getDefaultScrollPosition","e","container","scrollLeft","scrollTop","_this","options","_a","top","left","width","height","startPos","clientX","clientY","startRect","threshold","_b","throttleTime","_c","getScrollPosition","nowTime","now","distTime","Math","max","this","prevTime","direction","clearTimeout","timer","window","setTimeout","drag","prevPos","trigger","inputEvent","nextPos","offsetX","offsetY","EventEmitter"],"mappings":";;;;;;;;sfAIA,SAASA,EAAyBC,OACxBC,EAAYD,EAAEC,gBAEb,CACHA,EAAUC,WACVD,EAAUE,wIAKNC,YAAyB,KACzBA,WAAqB,GACrBA,WAAmB,EACnBA,QAAgB,0HACxB,SAAiBJ,EAAQK,OACfC,sCACFC,QACAC,SACAC,UACAC,gBAGCC,SAAW,CAACX,EAAEY,QAASZ,EAAEa,cACzBC,UAAY,CAAEP,MAAKC,OAAMC,QAAOC,kBAEzC,SAAYV,EAAQK,cAEZO,YACAC,YAGAZ,cACAK,cAAAS,iBACAC,iBAAAC,iBACAC,sBAAAC,iBAGAL,iBACAH,gBAEES,EAAUC,QACVC,EAAWC,KAAKC,IAAIP,EAAeQ,KAAKC,SAAWN,EAAS,GAE5DO,EAAY,CAAC,EAAG,MAElBb,EAAUP,IAAMM,EAAUE,GACtBJ,EAAS,GAAKG,EAAUP,KAAOM,EAAUF,EAAS,MAClDgB,EAAU,IAAM,GAEbb,EAAUP,IAAMO,EAAUJ,OAASG,EAAUE,IAChDJ,EAAS,GAAKG,EAAUP,IAAMO,EAAUJ,QAAUG,EAAUF,EAAS,MACrEgB,EAAU,GAAK,GAGnBb,EAAUN,KAAOI,EAAUG,GACvBJ,EAAS,GAAKG,EAAUN,MAAQI,EAAUD,EAAS,MACnDgB,EAAU,IAAM,GAEbb,EAAUN,KAAOM,EAAUL,MAAQG,EAAUG,IAChDJ,EAAS,GAAKG,EAAUN,KAAOM,EAAUL,OAASG,EAAUD,EAAS,MACrEgB,EAAU,GAAK,GAGvBC,aAAaH,KAAKI,QAEbF,EAAU,KAAOA,EAAU,UACrB,KAEI,EAAXL,cACKO,MAAQC,OAAOC,WAAW,WAC3B3B,EAAK4B,KAAKhC,EAAGK,IACdiB,IAEI,OAENI,SAAWN,MACVa,EAAUd,EAAkB,CAAElB,YAAW0B,mBAE1CO,QAAQ,SAAU,CACnBjC,YACA0B,YACAQ,WAAYnC,QAGVoC,EAAUjB,EAAkB,CAAElB,YAAW0B,cACzCU,EAAUD,EAAQ,GAAKH,EAAQ,GAC/BK,EAAUF,EAAQ,GAAKH,EAAQ,YAEhCI,IAAYC,UAGZJ,QAAQ,OAAQ,CACjBG,QAASV,EAAU,GAAKU,EAAU,EAClCC,QAASX,EAAU,GAAKW,EAAU,EAClCH,WAAYnC,IAGZiB,SACKY,MAAQC,OAAOC,WAAW,WAC3B3B,EAAK4B,KAAKhC,EAAGK,IACdY,KAEA,cAEX,WACIW,aAAaH,KAAKI,WAhGcU"}