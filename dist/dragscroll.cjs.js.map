{"version":3,"file":"dragscroll.cjs.js","sources":["../src/DragScroll.ts"],"sourcesContent":["import EventEmitter from \"@scena/event-emitter\";\nimport { now } from \"@daybrush/utils\";\nimport { CheckScrollOptions, DragScrollEvents, DragScrollOptions, Rect } from \"./types\";\n\nfunction getDefaultScrollPosition(e: { container: HTMLElement, direction: number[] }) {\n    let container = e.container;\n\n    if (container === document.body) {\n        return [\n            container.scrollLeft || document.documentElement.scrollLeft,\n            container.scrollTop || document.documentElement.scrollTop,\n        ];\n    }\n    return [\n        container.scrollLeft,\n        container.scrollTop,\n    ];\n}\n\nexport default class DragScroll extends EventEmitter<DragScrollEvents> {\n    private _startRect: Rect | null = null;\n    private _startPos: number[] = [];\n    private _prevTime: number = 0;\n    private _timer: number = 0;\n    private _prevScrollPos: number[] = [0, 0];\n    private _isWait = false;\n    public dragStart(e: any, options: DragScrollOptions) {\n        const container = options.container;\n        let top = 0;\n        let left = 0;\n        let width = 0;\n        let height = 0;\n\n        if (container === document.body) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        } else {\n            const rect = container.getBoundingClientRect();\n\n            top = rect.top;\n            left = rect.left;\n            width = rect.width;\n            height = rect.height;\n        }\n\n        this._startPos = [e.clientX, e.clientY];\n        this._startRect = { top, left, width, height };\n        this._prevScrollPos = this._getScrollPosition([0, 0], options);\n    }\n    public drag(e: any, options: DragScrollOptions) {\n        const {\n            clientX,\n            clientY,\n        } = e;\n        const {\n            threshold = 0,\n        } = options;\n        const {\n            _startRect,\n            _startPos,\n        } = this;\n\n        const direction = [0, 0];\n\n        if (_startRect.top > clientY - threshold) {\n            if (_startPos[1] > _startRect.top || clientY < _startPos[1]) {\n                direction[1] = -1;\n            }\n        } else if (_startRect.top + _startRect.height < clientY + threshold) {\n            if (_startPos[1] < _startRect.top + _startRect.height || clientY > _startPos[1]) {\n                direction[1] = 1;\n            }\n        }\n        if (_startRect.left > clientX - threshold) {\n            if (_startPos[0] > _startRect.left || clientX < _startPos[0]) {\n                direction[0] = -1;\n            }\n        } else if (_startRect.left + _startRect.width < clientX + threshold) {\n            if (_startPos[0] < _startRect.left + _startRect.width || clientX > _startPos[0]) {\n                direction[0] = 1;\n            }\n        }\n        clearTimeout(this._timer);\n\n        if (!direction[0] && !direction[1]) {\n            return false;\n        }\n        return this._continueDrag({\n            ...options,\n            direction,\n            inputEvent: e,\n            isDrag: true,\n        });\n    }\n    public checkScroll(options: CheckScrollOptions) {\n        if (this._isWait) {\n            return false;\n        }\n        const {\n            prevScrollPos = this._prevScrollPos,\n            direction,\n            throttleTime = 0,\n            inputEvent,\n            isDrag,\n        } = options;\n        const nextScrollPos = this._getScrollPosition(direction || [0, 0], options);\n        const offsetX = nextScrollPos[0] - prevScrollPos[0];\n        const offsetY = nextScrollPos[1] - prevScrollPos[1];\n\n        const nextDirection = direction || [\n            offsetX ? Math.abs(offsetX) / offsetX : 0,\n            offsetY ? Math.abs(offsetY) / offsetY : 0,\n        ];\n        this._prevScrollPos = nextScrollPos;\n\n        if (!offsetX && !offsetY) {\n            return false;\n        }\n        this.trigger(\"move\", {\n            offsetX: nextDirection[0] ? offsetX : 0,\n            offsetY: nextDirection[1] ? offsetY : 0,\n            inputEvent,\n        });\n\n        if (throttleTime && isDrag) {\n            this._timer = window.setTimeout(() => {\n                this._continueDrag(options);\n            }, throttleTime);\n        }\n        return true;\n    }\n    public dragEnd() {\n        clearTimeout(this._timer);\n    }\n    private _getScrollPosition(direction: number[], options: DragScrollOptions) {\n        const {\n            container,\n            getScrollPosition = getDefaultScrollPosition,\n        } = options;\n        return getScrollPosition({ container, direction });\n    }\n    private _continueDrag(options: CheckScrollOptions) {\n        const {\n            container,\n            direction,\n            throttleTime,\n            useScroll,\n            isDrag,\n            inputEvent,\n        } = options;\n\n        if (isDrag && this._isWait) {\n            return;\n        }\n        const nowTime = now();\n        const distTime = Math.max(throttleTime + this._prevTime - nowTime, 0);\n\n        if (distTime > 0) {\n            this._timer = window.setTimeout(() => {\n                this._continueDrag(options);\n            }, distTime);\n\n            return false;\n        }\n\n        this._prevTime = nowTime;\n        const prevScrollPos = this._getScrollPosition(direction, options);\n\n        this._prevScrollPos = prevScrollPos;\n\n        if (isDrag) {\n            this._isWait = true;\n        }\n        this.trigger(\"scroll\", {\n            container,\n            direction,\n            inputEvent,\n        });\n\n        this._isWait = false;\n        return useScroll || this.checkScroll({\n            ...options,\n            prevScrollPos,\n            direction,\n            inputEvent,\n        });\n    }\n}\n"],"names":["getDefaultScrollPosition","e","container","document","body","scrollLeft","documentElement","scrollTop","__extends","_this","options","top","left","width","height","window","innerWidth","innerHeight","rect","getBoundingClientRect","_startPos","clientX","clientY","_startRect","_prevScrollPos","_getScrollPosition","_a","threshold","_b","direction","clearTimeout","_timer","_continueDrag","inputEvent","isDrag","_isWait","prevScrollPos","throttleTime","nextScrollPos","offsetX","offsetY","nextDirection","Math","abs","trigger","setTimeout","getScrollPosition","useScroll","nowTime","now","distTime","max","_prevTime","checkScroll","EventEmitter"],"mappings":"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"}