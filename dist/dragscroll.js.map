{"version":3,"file":"dragscroll.js","sources":["../src/DragScroll.ts"],"sourcesContent":["import EventEmitter from \"@scena/event-emitter\";\nimport { now } from \"@daybrush/utils\";\nimport { CheckScrollOptions, DragScrollEvents, DragScrollOptions, Rect } from \"./types\";\n\nfunction getDefaultScrollPosition(e: { container: HTMLElement, direction: number[] }) {\n    let container = e.container;\n\n    if (container === document.body) {\n        return [\n            container.scrollLeft || document.documentElement.scrollLeft,\n            container.scrollTop || document.documentElement.scrollTop,\n        ];\n    }\n    return [\n        container.scrollLeft,\n        container.scrollTop,\n    ];\n}\n\nexport default class DragScroll extends EventEmitter<DragScrollEvents> {\n    private _startRect: Rect | null = null;\n    private _startPos: number[] = [];\n    private _prevTime: number = 0;\n    private _timer: number = 0;\n    private _prevScrollPos: number[] = [0, 0];\n    private _isWait = false;\n    public dragStart(e: any, options: DragScrollOptions) {\n        const container = options.container;\n        let top = 0;\n        let left = 0;\n        let width = 0;\n        let height = 0;\n\n        if (container === document.body) {\n            width = window.innerWidth;\n            height = window.innerHeight;\n        } else {\n            const rect = container.getBoundingClientRect();\n\n            top = rect.top;\n            left = rect.left;\n            width = rect.width;\n            height = rect.height;\n        }\n\n        this._startPos = [e.clientX, e.clientY];\n        this._startRect = { top, left, width, height };\n        this._prevScrollPos = this._getScrollPosition([0, 0], options);\n    }\n    public drag(e: any, options: DragScrollOptions) {\n        const {\n            clientX,\n            clientY,\n        } = e;\n        const {\n            threshold = 0,\n        } = options;\n        const {\n            _startRect,\n            _startPos,\n        } = this;\n\n        const direction = [0, 0];\n\n        if (_startRect.top > clientY - threshold) {\n            if (_startPos[1] > _startRect.top || clientY < _startPos[1]) {\n                direction[1] = -1;\n            }\n        } else if (_startRect.top + _startRect.height < clientY + threshold) {\n            if (_startPos[1] < _startRect.top + _startRect.height || clientY > _startPos[1]) {\n                direction[1] = 1;\n            }\n        }\n        if (_startRect.left > clientX - threshold) {\n            if (_startPos[0] > _startRect.left || clientX < _startPos[0]) {\n                direction[0] = -1;\n            }\n        } else if (_startRect.left + _startRect.width < clientX + threshold) {\n            if (_startPos[0] < _startRect.left + _startRect.width || clientX > _startPos[0]) {\n                direction[0] = 1;\n            }\n        }\n        clearTimeout(this._timer);\n\n        if (!direction[0] && !direction[1]) {\n            return false;\n        }\n        return this._continueDrag({\n            ...options,\n            direction,\n            inputEvent: e,\n            isDrag: true,\n        });\n    }\n    public checkScroll(options: CheckScrollOptions) {\n        if (this._isWait) {\n            return false;\n        }\n        const {\n            prevScrollPos = this._prevScrollPos,\n            direction,\n            throttleTime = 0,\n            inputEvent,\n            isDrag,\n        } = options;\n        const nextScrollPos = this._getScrollPosition(direction || [0, 0], options);\n        const offsetX = nextScrollPos[0] - prevScrollPos[0];\n        const offsetY = nextScrollPos[1] - prevScrollPos[1];\n\n        const nextDirection = direction || [\n            offsetX ? Math.abs(offsetX) / offsetX : 0,\n            offsetY ? Math.abs(offsetY) / offsetY : 0,\n        ];\n        this._prevScrollPos = nextScrollPos;\n\n        if (!offsetX && !offsetY) {\n            return false;\n        }\n        this.trigger(\"move\", {\n            offsetX: nextDirection[0] ? offsetX : 0,\n            offsetY: nextDirection[1] ? offsetY : 0,\n            inputEvent,\n        });\n\n        if (throttleTime && isDrag) {\n            this._timer = window.setTimeout(() => {\n                this._continueDrag(options);\n            }, throttleTime);\n        }\n        return true;\n    }\n    public dragEnd() {\n        clearTimeout(this._timer);\n    }\n    private _getScrollPosition(direction: number[], options: DragScrollOptions) {\n        const {\n            container,\n            getScrollPosition = getDefaultScrollPosition,\n        } = options;\n        return getScrollPosition({ container, direction });\n    }\n    private _continueDrag(options: CheckScrollOptions) {\n        const {\n            container,\n            direction,\n            throttleTime,\n            useScroll,\n            isDrag,\n            inputEvent,\n        } = options;\n\n        if (isDrag && this._isWait) {\n            return;\n        }\n        const nowTime = now();\n        const distTime = Math.max(throttleTime + this._prevTime - nowTime, 0);\n\n        if (distTime > 0) {\n            this._timer = window.setTimeout(() => {\n                this._continueDrag(options);\n            }, distTime);\n\n            return false;\n        }\n\n        this._prevTime = nowTime;\n        const prevScrollPos = this._getScrollPosition(direction, options);\n\n        this._prevScrollPos = prevScrollPos;\n\n        if (isDrag) {\n            this._isWait = true;\n        }\n        this.trigger(\"scroll\", {\n            container,\n            direction,\n            inputEvent,\n        });\n\n        this._isWait = false;\n        return useScroll || this.checkScroll({\n            ...options,\n            prevScrollPos,\n            direction,\n            inputEvent,\n        });\n    }\n}\n"],"names":["getDefaultScrollPosition","e","container","document","body","scrollLeft","documentElement","scrollTop","__extends","_this","options","top","left","width","height","window","innerWidth","innerHeight","rect","getBoundingClientRect","_startPos","clientX","clientY","_startRect","_prevScrollPos","_getScrollPosition","_a","threshold","_b","direction","clearTimeout","_timer","_continueDrag","inputEvent","isDrag","_isWait","prevScrollPos","throttleTime","nextScrollPos","offsetX","offsetY","nextDirection","Math","abs","trigger","setTimeout","getScrollPosition","useScroll","nowTime","now","distTime","max","_prevTime","checkScroll","EventEmitter"],"mappings":"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"}